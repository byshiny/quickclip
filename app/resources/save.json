{
  "comment": "I'm trying to keep format consistent, so I'm going to have",
  "circularBuffer": [
    "  var lastKeyDownDate = textBufferTimer[number]\n    log.info('goot time to save')\n    var diff = Math.abs(new Date() - lastKeyDownDate)\n    if (diff > COPY_BUFFER_TIME) {\n      /*\n      var saveTimeObj = {}\n      saveTimeObj.save = 'Savable'\n      saveTimeObj.time = String((diff / 1000).toPrecision(3)) + 'seconds'\n      saveWindow.webContents.send('load-state-time', saveTimeObj)\n      saveWindow.show()\n      setTimeout(function () {\n        log.info('hiding window')\n        saveWindow.hide()\n        saveTimeObj.save = 'Not Saved'\n        saveTimeObj.time = 'N/A'\n        saveWindow.webContents.send('load-state-time', saveTimeObj)\n      }, SAVE_WINDOW_AWAY_DELAY)*/\n    }\n    if (copyKeyTriggered(event)) {\n      // this is an arificial delay for robotjs and os to register cmd + x\n      setTimeout(function() {\n        var text = clipboard.readText()\n        log.info('herro')\n        log.info(text)\n        mouseCircularBuffer.enq(text)\n      }, 100)\n    }\n  }",
    "  var lastKeyDownDate = textBufferTimer[number]\n    log.info('goot time to save')\n    var diff = Math.abs(new Date() - lastKeyDownDate)\n    if (diff > COPY_BUFFER_TIME) {\n      /*\n      var saveTimeObj = {}\n      saveTimeObj.save = 'Savable'\n      saveTimeObj.time = String((diff / 1000).toPrecision(3)) + 'seconds'\n      saveWindow.webContents.send('load-state-time', saveTimeObj)\n      saveWindow.show()\n      setTimeout(function () {\n        log.info('hiding window')\n        saveWindow.hide()\n        saveTimeObj.save = 'Not Saved'\n        saveTimeObj.time = 'N/A'\n        saveWindow.webContents.send('load-state-time', saveTimeObj)\n      }, SAVE_WINDOW_AWAY_DELAY)*/\n    }\n    if (copyKeyTriggered(event)) {\n      // this is an arificial delay for robotjs and os to register cmd + x\n      setTimeout(function() {\n        var text = clipboard.readText()\n        log.info('herro')\n        log.info(text)\n        mouseCircularBuffer.enq(text)\n      }, 100)\n    }\n  }",
    "  var lastKeyDownDate = textBufferTimer[number]\n    log.info('goot time to save')\n    var diff = Math.abs(new Date() - lastKeyDownDate)\n    if (diff > COPY_BUFFER_TIME) {\n      /*\n      var saveTimeObj = {}\n      saveTimeObj.save = 'Savable'\n      saveTimeObj.time = String((diff / 1000).toPrecision(3)) + 'seconds'\n      saveWindow.webContents.send('load-state-time', saveTimeObj)\n      saveWindow.show()\n      setTimeout(function () {\n        log.info('hiding window')\n        saveWindow.hide()\n        saveTimeObj.save = 'Not Saved'\n        saveTimeObj.time = 'N/A'\n        saveWindow.webContents.send('load-state-time', saveTimeObj)\n      }, SAVE_WINDOW_AWAY_DELAY)*/\n    }\n    if (copyKeyTriggered(event)) {\n      // this is an arificial delay for robotjs and os to register cmd + x\n      setTimeout(function() {\n        var text = clipboard.readText()\n        log.info('herro')\n        log.info(text)\n        mouseCircularBuffer.enq(text)\n      }, 100)\n    }\n  }",
    "  var lastKeyDownDate = textBufferTimer[number]\n    log.info('goot time to save')\n    var diff = Math.abs(new Date() - lastKeyDownDate)\n    if (diff > COPY_BUFFER_TIME) {\n      /*\n      var saveTimeObj = {}\n      saveTimeObj.save = 'Savable'\n      saveTimeObj.time = String((diff / 1000).toPrecision(3)) + 'seconds'\n      saveWindow.webContents.send('load-state-time', saveTimeObj)\n      saveWindow.show()\n      setTimeout(function () {\n        log.info('hiding window')\n        saveWindow.hide()\n        saveTimeObj.save = 'Not Saved'\n        saveTimeObj.time = 'N/A'\n        saveWindow.webContents.send('load-state-time', saveTimeObj)\n      }, SAVE_WINDOW_AWAY_DELAY)*/\n    }\n    if (copyKeyTriggered(event)) {\n      // this is an arificial delay for robotjs and os to register cmd + x\n      setTimeout(function() {\n        var text = clipboard.readText()\n        log.info('herro')\n        log.info(text)\n        mouseCircularBuffer.enq(text)\n      }, 100)\n    }\n  }",
    "  var lastKeyDownDate = textBufferTimer[number]\n    log.info('goot time to save')\n    var diff = Math.abs(new Date() - lastKeyDownDate)\n    if (diff > COPY_BUFFER_TIME) {\n      /*\n      var saveTimeObj = {}\n      saveTimeObj.save = 'Savable'\n      saveTimeObj.time = String((diff / 1000).toPrecision(3)) + 'seconds'\n      saveWindow.webContents.send('load-state-time', saveTimeObj)\n      saveWindow.show()\n      setTimeout(function () {\n        log.info('hiding window')\n        saveWindow.hide()\n        saveTimeObj.save = 'Not Saved'\n        saveTimeObj.time = 'N/A'\n        saveWindow.webContents.send('load-state-time', saveTimeObj)\n      }, SAVE_WINDOW_AWAY_DELAY)*/\n    }\n    if (copyKeyTriggered(event)) {\n      // this is an arificial delay for robotjs and os to register cmd + x\n      setTimeout(function() {\n        var text = clipboard.readText()\n        log.info('herro')\n        log.info(text)\n        mouseCircularBuffer.enq(text)\n      }, 100)\n    }\n  }",
    "    var saveTimeObj = {}\n    saveTimeObj.save = 'Saved'\n    saveTimeObj.time = String((diff / 1000).toPrecision(3)) + 'seconds'\n    saveWindow.webContents.send('load-state-time', saveTimeObj)\n    saveWindow.show()\n    setTimeout(function () {\n      log.info('hiding window')\n      saveWindow.hide()\n      saveTimeObj.save = 'Not Saved'\n      saveTimeObj.time = 'N/A'\n      saveWindow.webContents.send('load-state-time', saveTimeObj)\n      saveWindow.show()\n    }, SAVE_WINDOW_AWAY_DELAY)",
    "    var saveTimeObj = {}\n    saveTimeObj.save = 'Saved'\n    saveTimeObj.time = String((diff / 1000).toPrecision(3)) + 'seconds'\n    saveWindow.webContents.send('load-state-time', saveTimeObj)\n    saveWindow.show()\n    setTimeout(function () {\n      log.info('hiding window')\n      saveWindow.hide()\n      saveTimeObj.save = 'Not Saved'\n      saveTimeObj.time = 'N/A'\n      saveWindow.webContents.send('load-state-time', saveTimeObj)\n      saveWindow.show()\n    }, SAVE_WINDOW_AWAY_DELAY)",
    "  saveTimeObj.save = 'Saved'\n        saveTimeObj.time = String(diff / 1000).toPrecision(3) + 'seconds'",
    "  saveTimeObj.save = 'Saved'\n        saveTimeObj.time = String(diff / 1000).toPrecision(3) + 'seconds'",
    "  saveTimeObj.save = 'Saved'\n        saveTimeObj.time = String(diff / 1000).toPrecision(3) + 'seconds'"
  ],
  "keyBuffer": {
    "0": "hello",
    "1": "r saveTimeObj = {}",
    "2": "is",
    "3": "master",
    "4": "wolfy",
    "5": "wolf",
    "6": "k",
    "7": "k",
    "8": "k",
    "9": "k"
  }
}